"use strict";(self.webpackChunkbetalectic_website=self.webpackChunkbetalectic_website||[]).push([["1679"],{8713:function(e,t,n){n.r(t),n.d(t,{assets:function(){return a},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return r},toc:function(){return u}});var r=n(6722),o=n(5893),i=n(65);let s={slug:"concurrency-in-nodejs",title:"Scaling Node.js Concurrency with the Cluster Module",authors:["avir"],image:"/img/blogs/concurrency.jpg"},c="Scaling Node.js Concurrency with the Cluster Module",a={authorsImageUrls:[void 0]},u=[];function l(e){let t={p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(t.p,{children:["Node.js is often described as ",(0,o.jsx)(t.strong,{children:"single-threaded"}),", but it powers some of the world\u2019s highest-traffic applications. So how does it manage to handle ",(0,o.jsx)(t.strong,{children:"thousands of concurrent connections"}),", ",(0,o.jsx)(t.strong,{children:"network I/O"}),","]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},65:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return s}});var r=n(7294);let o={},i=r.createContext(o);function s(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},6722:function(e){e.exports=JSON.parse('{"permalink":"/pr-preview/pr-44/blog/concurrency-in-nodejs","source":"@site/blog/2025-05-20-concurrency-in-nodejs.md","title":"Scaling Node.js Concurrency with the Cluster Module","description":"Node.js is often described as single-threaded, but it powers some of the world\u2019s highest-traffic applications. So how does it manage to handle thousands of concurrent connections, network I/O,  and file reads/writes\u2014with just one thread?","date":"2025-05-20T00:00:00.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Avi Rajput","title":"Jr. Software Engineer","page":{"permalink":"/pr-preview/pr-44/blog/authors/avir"},"socials":{"x":"https://x.com/y2j_avi","linkedin":"https://www.linkedin.com/in/avi-rajput-a07a54221/"},"imageURL":"/pr-preview/pr-44/img/blogs/AuthorProfile/avi.jpg","key":"avir"}],"frontMatter":{"slug":"concurrency-in-nodejs","title":"Scaling Node.js Concurrency with the Cluster Module","authors":["avir"],"image":"/img/blogs/concurrency.jpg"},"unlisted":false,"prevItem":{"title":"Orchestrating Laravel Queues & Scheduling in Docker with Cron & Supervisor","permalink":"/pr-preview/pr-44/blog/orchestrating-laravel-queues"},"nextItem":{"title":"Validation Best Practices in Fintech Apps with React Hook Form and Yup","permalink":"/pr-preview/pr-44/blog/react-hook-form"}}')}}]);